{
  "openapi": "3.0.0",
  "info": {
    "title": "AI Chatbot Assistant API",
    "version": "1.0.0",
    "description": "API documentation for authentication endpoints"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "John Doe" },
                  "email": { "type": "string", "format": "email", "example": "john@example.com" },
                  "password": { "type": "string", "example": "secret123" },
                  "confirmPassword": { "type": "string", "example": "secret123" }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "User registered successfully" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": { "application/json": { "schema": { "type": "object" } } }
          },
          "409": {
            "description": "Email already registered",
            "content": { "application/json": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user and retrieve tokens",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email", "example": "john@example.com" },
                  "password": { "type": "string", "example": "secret123" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful (refresh token set as HttpOnly cookie)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Login successful" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": { "type": "object" },
                        "accessToken": { "type": "string", "example": "eyJhbGciOi..." }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Missing credentials" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh access token using refresh token (cookie or body)",
        "tags": ["Auth"],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": { "type": "string", "example": "<refresh-token>" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Token refreshed successfully" },
                    "data": {
                      "type": "object",
                      "properties": { "accessToken": { "type": "string" } }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Missing refresh token" },
          "401": { "description": "Invalid or expired refresh token" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user and revoke refresh token",
        "tags": ["Auth"],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": { "type": "string", "example": "<refresh-token>" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Logout successful" },
          "404": { "description": "Refresh token not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {}
  }
}
